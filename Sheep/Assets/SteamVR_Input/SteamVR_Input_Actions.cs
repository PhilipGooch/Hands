//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_Trigger;
        
        private static SteamVR_Action_Boolean p_default_Grip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Vector2 p_default_Move;
        
        private static SteamVR_Action_Boolean p_default_TrackpadTouch;
        
        private static SteamVR_Action_Single p_default_TriggerAnalog;
        
        private static SteamVR_Action_Boolean p_default_AButton;
        
        private static SteamVR_Action_Boolean p_default_BButton;
        
        private static SteamVR_Action_Pose p_default_HandGripPose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeft;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRight;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_Trigger
        {
            get
            {
                return SteamVR_Actions.p_default_Trigger.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Grip
        {
            get
            {
                return SteamVR_Actions.p_default_Grip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Move
        {
            get
            {
                return SteamVR_Actions.p_default_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TrackpadTouch
        {
            get
            {
                return SteamVR_Actions.p_default_TrackpadTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_TriggerAnalog
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerAnalog.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_AButton
        {
            get
            {
                return SteamVR_Actions.p_default_AButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_BButton
        {
            get
            {
                return SteamVR_Actions.p_default_BButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_HandGripPose
        {
            get
            {
                return SteamVR_Actions.p_default_HandGripPose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeft.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRight
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRight.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_TriggerAnalog,
                    SteamVR_Actions.default_AButton,
                    SteamVR_Actions.default_BButton,
                    SteamVR_Actions.default_HandGripPose,
                    SteamVR_Actions.default_SkeletonLeft,
                    SteamVR_Actions.default_SkeletonRight,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_TriggerAnalog,
                    SteamVR_Actions.default_AButton,
                    SteamVR_Actions.default_BButton,
                    SteamVR_Actions.default_HandGripPose,
                    SteamVR_Actions.default_SkeletonLeft,
                    SteamVR_Actions.default_SkeletonRight};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_HandGripPose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_AButton,
                    SteamVR_Actions.default_BButton};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_TriggerAnalog};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_Move};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeft,
                    SteamVR_Actions.default_SkeletonRight};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_Move,
                    SteamVR_Actions.default_TrackpadTouch,
                    SteamVR_Actions.default_TriggerAnalog,
                    SteamVR_Actions.default_AButton,
                    SteamVR_Actions.default_BButton};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Trigger = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Default/in/Trigger")));
            SteamVR_Actions.p_default_Grip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Default/in/Grip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Default/in/Pose")));
            SteamVR_Actions.p_default_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Default/in/Move")));
            SteamVR_Actions.p_default_TrackpadTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Default/in/TrackpadTouch")));
            SteamVR_Actions.p_default_TriggerAnalog = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Default/in/TriggerAnalog")));
            SteamVR_Actions.p_default_AButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Default/in/AButton")));
            SteamVR_Actions.p_default_BButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Default/in/BButton")));
            SteamVR_Actions.p_default_HandGripPose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Default/in/HandGripPose")));
            SteamVR_Actions.p_default_SkeletonLeft = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/Default/in/SkeletonLeft")));
            SteamVR_Actions.p_default_SkeletonRight = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/Default/in/SkeletonRight")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/Default/out/Haptic")));
        }
    }
}
