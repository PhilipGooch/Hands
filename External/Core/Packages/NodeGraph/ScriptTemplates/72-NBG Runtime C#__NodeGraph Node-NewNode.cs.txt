using NBG.NodeGraph;

namespace Experimental
{

    /// <summary>
    /// TODO: Please fill out summary
    /// </summary>
    [AddNodeMenuItem(QuickAddNodeMenu.Folder.Gameplay, subFolder = "Experimental")] // TODO: Please place it in appropriate folder
    public class #SCRIPTNAME# : Node
    {
        /// <summary>
        /// Node needs to have at least either one input or one output
        /// TODO: Modify type and name according to your needs
        /// </summary>
        public NodeInputFloat templateInput;

        /// <summary>
        /// Default Unity MonoBehaviour Awake
        /// TODO: Remove if not used. Clean summary if used.
        /// </summary>
        private void Awake()
        {
            #NOTRIM#
        }

        /// <summary>
        /// Default Unity MonoBehaviour Start
        /// TODO: Remove if not used. Clean summary if used.
        /// </summary>
        private void Start()
        {
            #NOTRIM#
        }

        /// <summary>
        /// Called when NodeInput is changed.
        /// TODO: Remove if not used. Clean summary if used.
        /// </summary>
        public override void Process()
        {
            base.Process();
        }

        /// <summary>
        /// Override of a default unity function that processes some Node related code.
        /// TODO: Remove if not used. Clean summary if used.
        /// </summary>
        protected override void OnEnable()
        {
            base.OnEnable();
        }

        /// <summary>
        /// Override of a default unity function that processes some Node related code.
        /// TODO: Remove if not used. Clean summary if used.
        /// </summary>
        protected override void OnDisable()
        {
            base.OnDisable();
        }
    }
}
