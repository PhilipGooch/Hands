using NBG.MeshGeneration;
using Unity.Mathematics;
namespace NBG.PlaneDestructionSystem.Codegen
{
	internal static class VertexFail2
	{
		public static Polygon2D polygon => new Polygon2D(outline, holes);
		public static float3[] vertices => _vertices;
		public static int[] triangles => _triangles;

		public static float3[] outline  =
		{
			new float3(-5f, -5f, 0f), 
			new float3(-5f, 1f, 0f), 
			new float3(5f, 1f, 0f), 
			new float3(5f, -5f, 0f)
				};

		public static float3[][] holes =
		{
			new float3[] {
				new float3(-0.8924273f, -1.306268f, 0f), 
				new float3(-0.8924273f, -1.166268f, 0f), 
				new float3(-0.757f, -1.083f, 0f), 
				new float3(-0.7041487f, -1.045699f, 0f), 
				new float3(-0.5741487f, -0.9656991f, 0f), 
				new float3(-0.4441487f, -1.045699f, 0f), 
				new float3(-0.428f, -1.115f, 0f), 
				new float3(-0.3724776f, -1.081028f, 0f), 
				new float3(-0.242f, -1.196f, 0f), 
				new float3(-0.2299906f, -1.277824f, 0f), 
				new float3(-0.2299032f, -1.278419f, 0f), 
				new float3(-0.2299032f, -1.427878f, 0f), 
				new float3(-0.3599032f, -1.497878f, 0f), 
				new float3(-0.4837384f, -1.562187f, 0f), 
				new float3(-0.6137384f, -1.632187f, 0f), 
				new float3(-0.661f, -1.603f, 0f), 
				new float3(-0.8009202f, -1.528174f, 0f), 
				new float3(-0.785f, -1.372f, 0f)
			}
		};

		public static float3[] _vertices =
		{
			new float3(-5f, -5f, 0f), 
			new float3(-0.8924273f, -1.306268f, 0f), 
			new float3(-0.785f, -1.372f, 0f), 
			new float3(-0.8009202f, -1.528174f, 0f), 
			new float3(-0.661f, -1.603f, 0f), 
			new float3(-0.6137384f, -1.632187f, 0f), 
			new float3(-0.4837384f, -1.562187f, 0f), 
			new float3(-0.3599032f, -1.497878f, 0f), 
			new float3(-0.2299032f, -1.427878f, 0f), 
			new float3(-0.2299032f, -1.278419f, 0f), 
			new float3(-0.2299906f, -1.277824f, 0f), 
			new float3(-0.242f, -1.196f, 0f), 
			new float3(-0.3724776f, -1.081028f, 0f), 
			new float3(-0.428f, -1.115f, 0f), 
			new float3(-0.4441487f, -1.045699f, 0f), 
			new float3(-0.5741487f, -0.9656991f, 0f), 
			new float3(-0.7041487f, -1.045699f, 0f), 
			new float3(-0.757f, -1.083f, 0f), 
			new float3(-0.8924273f, -1.166268f, 0f), 
			new float3(-0.8924273f, -1.306268f, 0f), 
			new float3(-5f, -5f, 0f), 
			new float3(-5f, 1f, 0f), 
			new float3(5f, 1f, 0f), 
			new float3(5f, -5f, 0f), 
			new float3(-5f, -5f, 0.1f), 
			new float3(-0.8924273f, -1.306268f, 0.1f), 
			new float3(-0.785f, -1.372f, 0.1f), 
			new float3(-0.8009202f, -1.528174f, 0.1f), 
			new float3(-0.661f, -1.603f, 0.1f), 
			new float3(-0.6137384f, -1.632187f, 0.1f), 
			new float3(-0.4837384f, -1.562187f, 0.1f), 
			new float3(-0.3599032f, -1.497878f, 0.1f), 
			new float3(-0.2299032f, -1.427878f, 0.1f), 
			new float3(-0.2299032f, -1.278419f, 0.1f), 
			new float3(-0.2299906f, -1.277824f, 0.1f), 
			new float3(-0.242f, -1.196f, 0.1f), 
			new float3(-0.3724776f, -1.081028f, 0.1f), 
			new float3(-0.428f, -1.115f, 0.1f), 
			new float3(-0.4441487f, -1.045699f, 0.1f), 
			new float3(-0.5741487f, -0.9656991f, 0.1f), 
			new float3(-0.7041487f, -1.045699f, 0.1f), 
			new float3(-0.757f, -1.083f, 0.1f), 
			new float3(-0.8924273f, -1.166268f, 0.1f), 
			new float3(-0.8924273f, -1.306268f, 0.1f), 
			new float3(-5f, -5f, 0.1f), 
			new float3(-5f, 1f, 0.1f), 
			new float3(5f, 1f, 0.1f), 
			new float3(5f, -5f, 0.1f), 
			new float3(-5f, -5f, 0f), 
			new float3(-0.8924273f, -1.306268f, 0f), 
			new float3(-0.785f, -1.372f, 0f), 
			new float3(-0.8009202f, -1.528174f, 0f), 
			new float3(-0.661f, -1.603f, 0f), 
			new float3(-0.6137384f, -1.632187f, 0f), 
			new float3(-0.4837384f, -1.562187f, 0f), 
			new float3(-0.3599032f, -1.497878f, 0f), 
			new float3(-0.2299032f, -1.427878f, 0f), 
			new float3(-0.2299032f, -1.278419f, 0f), 
			new float3(-0.2299906f, -1.277824f, 0f), 
			new float3(-0.242f, -1.196f, 0f), 
			new float3(-0.3724776f, -1.081028f, 0f), 
			new float3(-0.428f, -1.115f, 0f), 
			new float3(-0.4441487f, -1.045699f, 0f), 
			new float3(-0.5741487f, -0.9656991f, 0f), 
			new float3(-0.7041487f, -1.045699f, 0f), 
			new float3(-0.757f, -1.083f, 0f), 
			new float3(-0.8924273f, -1.166268f, 0f), 
			new float3(-0.8924273f, -1.306268f, 0f), 
			new float3(-5f, -5f, 0f), 
			new float3(-5f, 1f, 0f), 
			new float3(5f, 1f, 0f), 
			new float3(5f, -5f, 0f), 
			new float3(-5f, -5f, 0.1f), 
			new float3(-0.8924273f, -1.306268f, 0.1f), 
			new float3(-0.785f, -1.372f, 0.1f), 
			new float3(-0.8009202f, -1.528174f, 0.1f), 
			new float3(-0.661f, -1.603f, 0.1f), 
			new float3(-0.6137384f, -1.632187f, 0.1f), 
			new float3(-0.4837384f, -1.562187f, 0.1f), 
			new float3(-0.3599032f, -1.497878f, 0.1f), 
			new float3(-0.2299032f, -1.427878f, 0.1f), 
			new float3(-0.2299032f, -1.278419f, 0.1f), 
			new float3(-0.2299906f, -1.277824f, 0.1f), 
			new float3(-0.242f, -1.196f, 0.1f), 
			new float3(-0.3724776f, -1.081028f, 0.1f), 
			new float3(-0.428f, -1.115f, 0.1f), 
			new float3(-0.4441487f, -1.045699f, 0.1f), 
			new float3(-0.5741487f, -0.9656991f, 0.1f), 
			new float3(-0.7041487f, -1.045699f, 0.1f), 
			new float3(-0.757f, -1.083f, 0.1f), 
			new float3(-0.8924273f, -1.166268f, 0.1f), 
			new float3(-0.8924273f, -1.306268f, 0.1f), 
			new float3(-5f, -5f, 0.1f), 
			new float3(-5f, 1f, 0.1f), 
			new float3(5f, 1f, 0.1f), 
			new float3(5f, -5f, 0.1f)
		};

		public static int[] _triangles =
		{
			1, 
			2, 
			0, 
			2, 
			3, 
			0, 
			3, 
			4, 
			0, 
			4, 
			5, 
			0, 
			5, 
			6, 
			0, 
			6, 
			7, 
			0, 
			7, 
			8, 
			0, 
			13, 
			14, 
			12, 
			14, 
			15, 
			12, 
			17, 
			18, 
			16, 
			19, 
			20, 
			18, 
			20, 
			21, 
			18, 
			18, 
			21, 
			16, 
			16, 
			21, 
			15, 
			21, 
			22, 
			15, 
			15, 
			22, 
			12, 
			12, 
			22, 
			11, 
			11, 
			22, 
			10, 
			10, 
			22, 
			9, 
			9, 
			22, 
			8, 
			8, 
			22, 
			0, 
			22, 
			23, 
			0, 
			25, 
			24, 
			26, 
			26, 
			24, 
			27, 
			27, 
			24, 
			28, 
			28, 
			24, 
			29, 
			29, 
			24, 
			30, 
			30, 
			24, 
			31, 
			31, 
			24, 
			32, 
			37, 
			36, 
			38, 
			38, 
			36, 
			39, 
			41, 
			40, 
			42, 
			43, 
			42, 
			44, 
			44, 
			42, 
			45, 
			42, 
			40, 
			45, 
			40, 
			39, 
			45, 
			45, 
			39, 
			46, 
			39, 
			36, 
			46, 
			36, 
			35, 
			46, 
			35, 
			34, 
			46, 
			34, 
			33, 
			46, 
			33, 
			32, 
			46, 
			32, 
			24, 
			46, 
			46, 
			24, 
			47, 
			48, 
			73, 
			49, 
			48, 
			72, 
			73, 
			49, 
			74, 
			50, 
			49, 
			73, 
			74, 
			50, 
			75, 
			51, 
			50, 
			74, 
			75, 
			51, 
			76, 
			52, 
			51, 
			75, 
			76, 
			52, 
			77, 
			53, 
			52, 
			76, 
			77, 
			53, 
			78, 
			54, 
			53, 
			77, 
			78, 
			54, 
			79, 
			55, 
			54, 
			78, 
			79, 
			55, 
			80, 
			56, 
			55, 
			79, 
			80, 
			56, 
			81, 
			57, 
			56, 
			80, 
			81, 
			57, 
			82, 
			58, 
			57, 
			81, 
			82, 
			58, 
			83, 
			59, 
			58, 
			82, 
			83, 
			59, 
			84, 
			60, 
			59, 
			83, 
			84, 
			60, 
			85, 
			61, 
			60, 
			84, 
			85, 
			61, 
			86, 
			62, 
			61, 
			85, 
			86, 
			62, 
			87, 
			63, 
			62, 
			86, 
			87, 
			63, 
			88, 
			64, 
			63, 
			87, 
			88, 
			64, 
			89, 
			65, 
			64, 
			88, 
			89, 
			65, 
			90, 
			66, 
			65, 
			89, 
			90, 
			66, 
			91, 
			67, 
			66, 
			90, 
			91, 
			67, 
			92, 
			68, 
			67, 
			91, 
			92, 
			68, 
			93, 
			69, 
			68, 
			92, 
			93, 
			69, 
			94, 
			70, 
			69, 
			93, 
			94, 
			70, 
			95, 
			71, 
			70, 
			94, 
			95, 
			71, 
			72, 
			48, 
			71, 
			95, 
			72
		};
	}
}
